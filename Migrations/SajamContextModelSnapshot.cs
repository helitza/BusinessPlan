// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace JobFair.Migrations
{
    [DbContext(typeof(SajamContext))]
    partial class SajamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Kompanija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GodinaOsnivanja")
                        .HasColumnType("int");

                    b.Property<string>("HR")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Oblast")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SajamID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SajamID");

                    b.ToTable("Kompanija");
                });

            modelBuilder.Entity("Models.Mentor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Mentor");
                });

            modelBuilder.Entity("Models.Prezentovanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KompanijaID")
                        .HasColumnType("int");

                    b.Property<int?>("SajamID")
                        .HasColumnType("int");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KompanijaID");

                    b.HasIndex("SajamID");

                    b.HasIndex("SalaID");

                    b.ToTable("Prezentovanje");
                });

            modelBuilder.Entity("Models.Sajam", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojSala")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Sajam");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SajamID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SajamID");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("Models.Task", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("KompanijaID")
                        .HasColumnType("int");

                    b.Property<int?>("MentorID")
                        .HasColumnType("int");

                    b.Property<string>("Pozicija")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("KompanijaID");

                    b.HasIndex("MentorID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Models.Kompanija", b =>
                {
                    b.HasOne("Models.Sajam", "Sajam")
                        .WithMany("Kompanije")
                        .HasForeignKey("SajamID");

                    b.Navigation("Sajam");
                });

            modelBuilder.Entity("Models.Prezentovanje", b =>
                {
                    b.HasOne("Models.Kompanija", "Kompanija")
                        .WithMany("Prezentovanja")
                        .HasForeignKey("KompanijaID");

                    b.HasOne("Models.Sajam", "Sajam")
                        .WithMany("Raspored")
                        .HasForeignKey("SajamID");

                    b.HasOne("Models.Sala", "Sala")
                        .WithMany("Prezentovanja")
                        .HasForeignKey("SalaID");

                    b.Navigation("Kompanija");

                    b.Navigation("Sajam");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.HasOne("Models.Sajam", "Sajam")
                        .WithMany("Sale")
                        .HasForeignKey("SajamID");

                    b.Navigation("Sajam");
                });

            modelBuilder.Entity("Models.Task", b =>
                {
                    b.HasOne("Models.Kompanija", "Kompanija")
                        .WithMany("Taskovi")
                        .HasForeignKey("KompanijaID");

                    b.HasOne("Models.Mentor", "Mentor")
                        .WithMany("Taskovi")
                        .HasForeignKey("MentorID");

                    b.Navigation("Kompanija");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("Models.Kompanija", b =>
                {
                    b.Navigation("Prezentovanja");

                    b.Navigation("Taskovi");
                });

            modelBuilder.Entity("Models.Mentor", b =>
                {
                    b.Navigation("Taskovi");
                });

            modelBuilder.Entity("Models.Sajam", b =>
                {
                    b.Navigation("Kompanije");

                    b.Navigation("Raspored");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Navigation("Prezentovanja");
                });
#pragma warning restore 612, 618
        }
    }
}
